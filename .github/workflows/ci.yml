name: Automated Testing Workflow
on:
  push:
    branches: 
      - test-all
  pull_request:
    branches: 
      - test-all
  workflow_dispatch:  

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  complete_testing:
    name: UI and API Testing Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Configure Java Development Kit
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Install Chrome Browser
      run: |
        sudo mkdir -p /etc/apt/sources.list.d
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install google-chrome-stable -y
    
    - name: Configure ChromeDriver
      uses: nanasess/setup-chromedriver@master

    - name: Initialize Chrome Environment
      run: |
        export DISPLAY=:99
        sudo Xvfb -ac :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        
    - name: Launch API Application
      working-directory: API_Testing
      run: |
        nohup java -jar demo-0.0.1-SNAPSHOT.jar & 
        echo $! > ./app.pid
        timeout 60 bash -c 'while ! nc -z localhost 7081; do sleep 1; done'
        echo "API Application is now running"
        sleep 15
    
    - name: Execute API Test Suite
      working-directory: API_Testing
      run: |
        mvn clean test -Dallure.results.directory=allure-results
      continue-on-error: true
    
    - name: Execute UI Test Suite
      working-directory: UI_Testing
      run: |
        mvn clean test -Dallure.results.directory=allure-results
      continue-on-error: true
    
    - name: Combine Allure Results
      if: always()
      run: |
        mkdir -p combined-allure-results
        cp -r API_Testing/allure-results/* combined-allure-results/ || true
        cp -r UI_Testing/allure-results/* combined-allure-results/ || true
        echo "Combined Allure Results:"
        ls -R combined-allure-results/
    
    - name: Generate Allure Report
      if: always()
      run: |
        allure generate combined-allure-results --clean -o allure-report
        echo "Allure Report generated"

    - name: Deploy Allure Report
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        publish_branch: gh-pages
        force_orphan: true
    
    - name: Perform Cleanup
      if: always()
      run: |
        if [ -f API_Testing/app.pid ]; then
          kill $(cat API_Testing/app.pid)
          rm API_Testing/app.pid
        fi
        rm -rf API_Testing/allure-results || true
        rm -rf UI_Testing/allure-results || true
        rm -rf combined-allure-results || true
        rm -rf allure-report || true
