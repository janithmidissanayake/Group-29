{"uuid":"b75ecb61-6cf4-4fb8-884d-946d6049c1c9","historyId":"c1fc4fd22168533e8b9bd39751e8dd69","testCaseId":"6e619d9a2e64386a762fc5a951a75b80","fullName":"src/test/resources/features/GetBookByID.feature:10","labels":[{"name":"tag","value":"GetBooks"},{"name":"host","value":"laptop"},{"name":"thread","value":"18164@laptop.main(1)"},{"name":"feature","value":"Get Book By Id"},{"name":"story","value":"Fetch a book by ID with valid user credentials (BUG EXPECTED)"},{"name":"suite","value":"Get Book By Id"},{"name":"testClass","value":"Fetch a book by ID with valid user credentials (BUG EXPECTED)"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///E:/IT%20%20NOTES/IS3440%20-%20IT%20Quality%20Assurance/Group%2029/API_Testing/src/test/resources/features/GetBookByID.feature"},{"name":"package","value":"src.test.resources.features.GetBookByID_feature.Get Book By Id"}],"links":[],"name":"Fetch a book by ID with valid user credentials (BUG EXPECTED)","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Received 403 Forbidden with valid user credentials, which is a bug!","trace":"java.lang.AssertionError: Received 403 Forbidden with valid user credentials, which is a bug!\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat com.group_29.api_testing.stepDefinitions.getApiStepDefinitions.GetBookByID.verifyGetBookByIDStatusCode(GetBookByID.java:38)\r\n\tat ✽.the GetBookByID response status code should be 200 or 404 not 403(file:///E:/IT%20%20NOTES/IS3440%20-%20IT%20Quality%20Assurance/Group%2029/API_Testing/src/test/resources/features/GetBookByID.feature:13)\r\n"},"stage":"finished","steps":[{"name":"Given the GetBookByID API is up and running","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735625256843,"stop":1735625256843},{"name":"When I send a GETBooksByID request to \"/api/books/{id}\" with user credentials","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735625256843,"stop":1735625256964},{"name":"Then the GetBookByID response status code should be 200 or 404 not 403","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Received 403 Forbidden with valid user credentials, which is a bug!","trace":"java.lang.AssertionError: Received 403 Forbidden with valid user credentials, which is a bug!\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat com.group_29.api_testing.stepDefinitions.getApiStepDefinitions.GetBookByID.verifyGetBookByIDStatusCode(GetBookByID.java:38)\r\n\tat ✽.the GetBookByID response status code should be 200 or 404 not 403(file:///E:/IT%20%20NOTES/IS3440%20-%20IT%20Quality%20Assurance/Group%2029/API_Testing/src/test/resources/features/GetBookByID.feature:13)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735625256964,"stop":1735625256968},{"name":"And the response should contain the book details","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735625256969,"stop":1735625256969}],"attachments":[],"parameters":[],"start":1735625256842,"stop":1735625256970}